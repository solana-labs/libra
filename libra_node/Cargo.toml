[package]
name = "solana_libra_node"
version = "0.1.0"
authors = ["Libra Association <opensource@libra.org>"]
license = "Apache-2.0"
publish = false
edition = "2018"

[dependencies]
grpcio = "0.4.3"
grpcio-sys = "0.4.4"
signal-hook = "0.1.10"
tokio = "0.1.22"

admission_control_proto = { path = "../admission_control/admission_control_proto", package = "solana_libra_admission_control_proto" }
admission_control_service = { path = "../admission_control/admission_control_service", package = "solana_libra_admission_control_service" }
config = { path = "../config", package = "solana_libra_config" }
consensus = { path = "../consensus", package = "solana_libra_consensus" }
crash_handler = { path = "../common/crash_handler", package = "solana_libra_crash_handler" }
crypto = { path = "../crypto/legacy_crypto", package = "solana_libra_crypto" }
debug_interface = { path = "../common/debug_interface", package = "solana_libra_debug_interface" }
logger = { path = "../common/logger", package = "solana_libra_logger" }
executable_helpers = { path = "../common/executable_helpers", package = "solana_libra_executable_helpers" }
execution_proto = { path = "../execution/execution_proto", package = "solana_libra_execution_proto" }
grpc_helpers = { path = "../common/grpc_helpers", package = "solana_libra_grpc_helpers" }
mempool = { path = "../mempool", package = "solana_libra_mempool" }
metrics = { path = "../common/metrics", package = "solana_libra_metrics" }
execution_service = { path = "../execution/execution_service", package = "solana_libra_execution_service" }
failure = { path = "../common/failure_ext", package = "solana_libra_failure_ext" }
network = { path = "../network", package = "solana_libra_network" }
proto_conv = { path = "../common/proto_conv", package = "solana_libra_proto_conv" }
storage_client = { path = "../storage/storage_client", package = "solana_libra_storage_client" }
storage_service = { path = "../storage/storage_service", package = "solana_libra_storage_service" }
types = { path = "../types", package = "solana_libra_types" }
vm_genesis = { path = "../language/vm/vm_genesis", package = "solana_libra_vm_genesis" }
vm_validator = { path = "../vm_validator", package = "solana_libra_vm_validator" }

[dev-dependencies]
config_builder = { path = "../config/config_builder", package = "solana_libra_config_builder" }
